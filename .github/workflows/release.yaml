name: Pack release Docker Image
on:
  release:
    types:
      - published
  workflow_dispatch:
jobs:
  code-checks:
    runs-on: ubuntu-latest
    env:
      WORKDIR: app
      MYPYPATH: src
    defaults:
      run:
        working-directory: ${{ env.WORKDIR }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: 3.11
      - name: Install dependencies
        run: |
          pip install --upgrade pip && pip install poetry==1.4
          poetry config virtualenvs.in-project true
          poetry install --no-ansi --no-root
      - name: Format with black
        run: |

          poetry run black --line-length 120 --diff --check $(git ls-files '*.py')
      - name: Lint with flake8
        run: |
          poetry run flake8 --count --exit-zero --statistics --show-source $(git ls-files '*.py')
      - name: Lint with Mypy
        env:
          MYPYPATH: ${{ env.MYPYPATH }}
        run: |
          poetry run mypy --config-file ../mypy.ini $(git ls-files '*.py')
  create-docker-image:
    runs-on: ubuntu-latest
    env:
      WORKDIR: app
      MYPYPATH: src
      OCI_REGISTRY: ${{ vars.DOCKER_REG_URL }}
    defaults:
      run:
        working-directory: ${{ env.WORKDIR }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker AD
        uses: docker/login-action@v2
        with:
          registry: ${{ env.OCI_REGISTRY }}
          username: ${{ secrets.DOCKERAD_USERNAME }}
          password: ${{ secrets.DOCKERAD_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ${{ env.WORKDIR }}
          push: true
          tags: |
            ${{ env.OCI_REGISTRY }}/ad/wbadapter:${{  github.ref_name }}
