version: '3.8'

x-redis-cred: &redis-cred
  REDIS_HOST: ${REDIS_HOST}
  REDIS_PORT: ${REDIS_PORT}
  REDIS_PASSWORD: ${REDIS_PASSWORD}

x-app-cred: &app-cred
  PROJECT_NAME: WILDBERRIES_ADAPTER
  X_USER_ID: ${X_USER_ID}
  X_SUPPLIER_ID: ${X_SUPPLIER_ID}
  X_SUPPLIER_ID_EXTERNAl: ${X_SUPPLIER_ID_EXTERNAl}
  WB_TOKEN: ${WB_TOKEN}
  <<: *redis-cred

services:

  ad-wbadapter-redis:
    container_name: ad-wbadapter-redis
    image: redis:7.0
    environment: *redis-cred
    volumes:
      - ad-wbadapter-redis-data:/data
    restart: on-failure
    healthcheck:
      test: [ 'CMD', 'redis-cli' ]
      interval: 3s
      timeout: 5s
      retries: 3
    networks:
      - ad-network

  ad-wbadapter:
    container_name: ad-wbadapter
    build: ./app
    environment: *app-cred
    restart: on-failure
    expose:
      - 8001
    depends_on:
      ad-wbadapter-redis:
        condition: service_healthy
    networks:
      - ad-network

  ad-wba-worker:
    container_name: ad-wba-worker
    build: ./app
    environment: *app-cred
    command: arq core.arq.WorkerSettings
    restart: on-failure
    depends_on:
      ad-wbadapter-redis:
        condition: service_healthy
    networks:
      - ad-network

volumes:
  ad-wbadapter-redis-data:

networks:
  ad-network:
    name: ad-network
    external: true